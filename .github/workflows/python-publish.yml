name: Auto Build Release

on:
  push:
    tags:
      - 'v*'  # 触发条件：推送v开头的标签时自动运行
  workflow_dispatch:  # 允许手动触发

jobs:
  build-release:
    runs-on: windows-latest  # 使用Windows构建环境
    permissions:  # 必要的权限声明
      contents: write
      releases: write

    steps:
    # 1. 代码检出
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整提交历史

    # 2. 设置Python环境
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.9'  # 精确指定Python版本
        cache: 'pip'  # 自动缓存pip包

    # 3. 依赖安装（带缓存优化）
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    # 4. 构建过程
    - name: Build with PyInstaller
      shell: pwsh  # 显式使用PowerShell
      run: |
        # 执行构建
        pyinstaller --noconfirm "自动脚本.spec"
        
        # 构建验证
        $files = Get-ChildItem dist -Recurse -File
        echo "生成文件列表："
        $files | Format-Table FullName
        echo "总文件数: $($files.Count)"

    # 5. 上传Release（优化版）
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # 标准传参方式
        files: |
          dist/**/*
        draft: false  # 直接发布
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}  # 自动识别测试版

    # 6. 清理工作空间（可选）
    - name: Cleanup
      if: always()  # 无论成功失败都执行清理
      run: |
        Remove-Item -Recurse -Force build, dist -ErrorAction SilentlyContinue
